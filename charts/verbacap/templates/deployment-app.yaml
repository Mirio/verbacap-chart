apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "verbacap.fullname" . }}-app
  labels:
    {{- include "verbacap.labels" . | nindent 4 }}-app
spec:
  replicas: {{ .Values.replicaAppCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "verbacap.name" . }}-app
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "verbacap.labels" . | nindent 8 }}
        app.kubernetes.io/name: {{ include "verbacap.name" . }}-app
        app.kubernetes.io/instance: {{ .Release.Name }}
	{{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "verbacap.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-app
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:v{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bash", "/entrypoint.bash", "run"]
          volumeMounts:
            - name: data
              mountPath: /persist
            - name: static
              mountPath: /home/app/staticfiles
            - name: tmp
              mountPath: /tmp
          env:
            - name: "DATABASE_URL"
              value: "postgres://{{ .Values.externalPostgres.user }}:{{ .Values.externalPostgres.password }}@{{ .Values.externalPostgres.host }}/{{ .Values.externalPostgres.database }}"
            - name: "DJANGO_SECRET_KEY"
              value: "{{ .Values.appSecretKey }}"
            - name: "DJANGO_DEBUG"
              value: "{{ .Values.appDebug }}"
            - name: "CELERY_BROKER_URL"
              value: "{{ .Values.externalredisUrl }}"
            - name: "DJANGO_ALLOWED_HOSTS"
              value: "{{ .Values.appAllowedHosts }}"
            - name: "DEBUG_INTERNALIPS"
              value: "{{ .Values.appInternalIPS }}"
            - name: "PERSIST_AUDIO_ROOTDIR"
              value: "/persist"
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 60
            httpGet:
              path: /-/health/
              port: http
          readinessProbe:
            initialDelaySeconds: 60
            httpGet:
              path: /-/health/
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: static
          emptyDir:
            sizeLimit: 100Mi
        - name: tmp
          emptyDir:
            sizeLimit: 500Mi
        - name: data
          persistentVolumeClaim:
            claimName: {{ ternary .Values.persistence.existVolume.volumeName "verbacap-data" .Values.persistence.useExistClaim }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
